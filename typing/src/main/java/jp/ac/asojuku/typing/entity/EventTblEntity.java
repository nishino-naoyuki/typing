package jp.ac.asojuku.typing.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.Data;

/**
 * イベントテーブル モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Data
@Entity 
@Table(name="EVENT_TBL")
public class EventTblEntity implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** eid. */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer eid;

	/** name. */
	private String name;

	/** public_date. */
	private Date publicDate;

	/** finish_date. */
	private Date finishDate;

	/** ower_name. */
	private String owerName;

	/** rankingdisplay. */
	private Integer rankingdisplay;

	/** hiderankingtime. */
	private Integer hiderankingtime;

	/** filter. */
	private String filter;

	/** イベント問題文 一覧. */
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="eqid",insertable=true ,updatable=true)
	private Set<EventQuestionEntity> eventQuestionSet;

	/** イベントユーザー 一覧. */
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="euid",insertable=true ,updatable=true)
	private Set<EventUserEntity> eventUserSet;

	/**
	 * コンストラクタ.
	 */
	public EventTblEntity() {
		this.eventQuestionSet = new HashSet<EventQuestionEntity>();
		this.eventUserSet = new HashSet<EventUserEntity>();
	}

	/**
	 * eid を設定します.
	 * 
	 * @param eid
	 *            eid
	 */
	public void setEid(Integer eid) {
		this.eid = eid;
	}

	/**
	 * eid を取得します.
	 * 
	 * @return eid
	 */
	public Integer getEid() {
		return this.eid;
	}

	/**
	 * name を設定します.
	 * 
	 * @param name
	 *            name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * name を取得します.
	 * 
	 * @return name
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * public_date を設定します.
	 * 
	 * @param publicDate
	 *            public_date
	 */
	public void setPublicDate(Date publicDate) {
		this.publicDate = publicDate;
	}

	/**
	 * public_date を取得します.
	 * 
	 * @return public_date
	 */
	public Date getPublicDate() {
		return this.publicDate;
	}

	/**
	 * finish_date を設定します.
	 * 
	 * @param finishDate
	 *            finish_date
	 */
	public void setFinishDate(Date finishDate) {
		this.finishDate = finishDate;
	}

	/**
	 * finish_date を取得します.
	 * 
	 * @return finish_date
	 */
	public Date getFinishDate() {
		return this.finishDate;
	}

	/**
	 * ower_name を設定します.
	 * 
	 * @param owerName
	 *            ower_name
	 */
	public void setOwerName(String owerName) {
		this.owerName = owerName;
	}

	/**
	 * ower_name を取得します.
	 * 
	 * @return ower_name
	 */
	public String getOwerName() {
		return this.owerName;
	}

	/**
	 * rankingdisplay を設定します.
	 * 
	 * @param rankingdisplay
	 *            rankingdisplay
	 */
	public void setRankingdisplay(Integer rankingdisplay) {
		this.rankingdisplay = rankingdisplay;
	}

	/**
	 * rankingdisplay を取得します.
	 * 
	 * @return rankingdisplay
	 */
	public Integer getRankingdisplay() {
		return this.rankingdisplay;
	}

	/**
	 * hiderankingtime を設定します.
	 * 
	 * @param hiderankingtime
	 *            hiderankingtime
	 */
	public void setHiderankingtime(Integer hiderankingtime) {
		this.hiderankingtime = hiderankingtime;
	}

	/**
	 * hiderankingtime を取得します.
	 * 
	 * @return hiderankingtime
	 */
	public Integer getHiderankingtime() {
		return this.hiderankingtime;
	}

	/**
	 * filter を設定します.
	 * 
	 * @param filter
	 *            filter
	 */
	public void setFilter(String filter) {
		this.filter = filter;
	}

	/**
	 * filter を取得します.
	 * 
	 * @return filter
	 */
	public String getFilter() {
		return this.filter;
	}

	/**
	 * イベント問題文 一覧を設定します.
	 * 
	 * @param eventQuestionSet
	 *            イベント問題文 一覧
	 */
	public void setEventQuestionSet(Set<EventQuestionEntity> eventQuestionSet) {
		this.eventQuestionSet = eventQuestionSet;
	}

	/**
	 * イベント問題文 を追加します.
	 * 
	 * @param eventQuestion
	 *            イベント問題文
	 */
	public void addEventQuestion(EventQuestionEntity eventQuestion) {
		this.eventQuestionSet.add(eventQuestion);
	}

	/**
	 * イベント問題文 一覧を取得します.
	 * 
	 * @return イベント問題文 一覧
	 */
	public Set<EventQuestionEntity> getEventQuestionSet() {
		return this.eventQuestionSet;
	}

	/**
	 * イベントユーザー 一覧を設定します.
	 * 
	 * @param eventUserSet
	 *            イベントユーザー 一覧
	 */
	public void setEventUserSet(Set<EventUserEntity> eventUserSet) {
		this.eventUserSet = eventUserSet;
	}

	/**
	 * イベントユーザー を追加します.
	 * 
	 * @param eventUser
	 *            イベントユーザー
	 */
	public void addEventUser(EventUserEntity eventUser) {
		this.eventUserSet.add(eventUser);
	}

	/**
	 * イベントユーザー 一覧を取得します.
	 * 
	 * @return イベントユーザー 一覧
	 */
	public Set<EventUserEntity> getEventUserSet() {
		return this.eventUserSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((eid == null) ? 0 : eid.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EventTblEntity other = (EventTblEntity) obj;
		if (eid == null) {
			if (other.eid != null) {
				return false;
			}
		} else if (!eid.equals(other.eid)) {
			return false;
		}
		return true;
	}

}
